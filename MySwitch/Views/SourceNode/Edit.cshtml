@model MySwitch.Core.Models.SourceNode
@{
    ViewBag.Title = "Edit Source Node Information";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="col-md-6">

    @if (ViewBag.Message != null)
    {
        if (ViewBag.Message == "Success")
        {
            <div class="alert alert-success">
                <p>@ViewBag.Message <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

            </div>

        }
        else if (ViewBag.Message == "Exist")
        {
            <div class="alert alert-error">
                <p>Branch Name Exist <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

            </div>

        }
        else if (ViewBag.Message == "Error")
        {
            <div class="alert alert-error">
                <p>@ViewBag.Message <span class="closebtn" onclick="this.parentElement.style.display='none';">&times;</span> </p>

            </div>

        }
    }
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    <div class="form-group ">
        @Html.LabelFor(m => m.Name)
        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", maxlength = 45, pattern = "^[A-Z\\sa-z]+$", minlength = 3, required = "required" })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
    <div class="form-group ">
        @Html.LabelFor(m => m.HostName)
        @Html.TextBoxFor(m => m.HostName, new { @class = "form-control", maxlength = 5, pattern = "^[A-Z\\sa-z]+$", minlength = 3, required = "required" })
        @Html.ValidationMessageFor(model => model.HostName, "", new { @class = "text-danger" })
    </div>
    <div class="form-group ">
        @Html.LabelFor(m => m.IPAddress)
        @Html.TextBoxFor(m => m.IPAddress, new { @class = "form-control", maxlength = 255, pattern = "^[A-Z\\sa-z]+$", minlength = 3, required = "required" })
        @Html.ValidationMessageFor(model => model.IPAddress, "", new { @class = "text-danger" })
    </div>
    <div class="form-group ">
        @Html.LabelFor(m => m.Port)
        @Html.TextBoxFor(m => m.Port, new { @class = "form-control", maxlength = 5, pattern = "^[A-Z\\sa-z]+$", minlength = 3, required = "required" })
        @Html.ValidationMessageFor(model => model.Port, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.SchemeId)
        @Html.DropDownListFor(model => model.SchemeId, new SelectList(Model.Schemes,
            "Id", "RouteId"),"Choose an Option", new {@class = "form-control", required="required", @data_live_search = "true" })
        @Html.ValidationMessageFor(model => model.SchemeId, "", new { @class = "text-danger" })
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Status)
        @Html.EnumDropDownListFor(m => m.Status)
        @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
    </div>



    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="SUBMIT" class="btn btn-default" />
        </div>
    </div>
</div>
}

@section ViewSpecificJavascript
    {
    <script>
        $(document).ready(function () {
            setTimeout(function () {
                $(".alert").fadeOut(100, null);
            },
                3000);
        });
    </script>
}